{"ast":null,"code":"var _jsxFileName = \"D:\\\\reduxapp\\\\src\\\\Components\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport { Button } from 'bootstrap';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Add_todo, del_todo, edit_todo, update_todo } from '../Container/Services/Reducres/Todoreducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [val, setVal] = useState('');\n  const [update, setUpdate] = useState(false);\n  const [index, setIndex] = useState('');\n  // const[data,setdata]=useState([])\n  //  console.log(setval,'val');\n  const dispatch = useDispatch();\n  const myarr = useSelector(state => state.todo.arry);\n  // const[vl,setVl]=useState('')\n\n  const inputval = e => {\n    setVal(e.target.value);\n  };\n  const submit_btn = () => {\n    dispatch(Add_todo(val));\n    setVal('');\n  };\n  const Del_btn = index => {\n    dispatch(del_todo(index));\n  };\n  const edit_btn = (item, index) => {\n    setVal(item);\n    setUpdate(true);\n    setIndex(index);\n  };\n  const update_todo = index => {\n    // dispatch(del_todo(index))\n    let data = [...myarr];\n    data.splice(index, 1, val);\n    dispatch(update_todo(data));\n    setUpdate('');\n    console.log(data, 'dd');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoList \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: inputval,\n      className: \"input\",\n      type: \"text\",\n      value: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), !update ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit_btn,\n      className: \"btn-primary\",\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-primary\",\n      onClick: () => update_todo(index),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 97\n    }, this), myarr.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => Del_btn(index),\n            className: \"btn-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-danger\",\n            onClick: () => edit_btn(item, index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Todo, \"GTXqCO3TtNmYlmCnxexbsjv6PJQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Button","React","useState","useDispatch","useSelector","Add_todo","del_todo","edit_todo","update_todo","Todo","val","setVal","update","setUpdate","index","setIndex","dispatch","myarr","state","todo","arry","inputval","e","target","value","submit_btn","Del_btn","edit_btn","item","data","splice","console","log","map"],"sources":["D:/reduxapp/src/Components/Todo.js"],"sourcesContent":["import { Button } from 'bootstrap'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Add_todo, del_todo, edit_todo,update_todo} from '../Container/Services/Reducres/Todoreducer'\r\n\r\nconst Todo = () => {\r\n    const [val, setVal] = useState('')\r\n    const [update, setUpdate] = useState(false)\r\n    const [index, setIndex] = useState('')\r\n    // const[data,setdata]=useState([])\r\n//  console.log(setval,'val');\r\n    const dispatch = useDispatch()\r\n    const myarr = useSelector((state) => state.todo.arry)\r\n    // const[vl,setVl]=useState('')\r\n\r\n    const inputval = (e) => {\r\n        setVal(e.target.value)\r\n\r\n    }\r\n\r\n\r\n    const submit_btn = () => {\r\n        dispatch(Add_todo(val))\r\n        setVal('')\r\n    }\r\n    const Del_btn = (index) => {\r\n\r\n        dispatch(del_todo(index))\r\n    }\r\n    const edit_btn = (item, index) => {\r\n       \r\n        setVal(item)\r\n        setUpdate(true)\r\n        setIndex(index)\r\n    }\r\n\r\n    const update_todo = (index) => {\r\n        // dispatch(del_todo(index))\r\n        let data =[...myarr]\r\n        \r\n        data.splice(index,1,val)\r\n        dispatch(update_todo(data))\r\n     \r\n        setUpdate('')\r\n      \r\n     console.log(data,'dd');\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>TodoList </h1>\r\n            <input onChange={inputval} className='input' type=\"text\" value={val} />\r\n            {!update ? <button onClick={submit_btn} className='btn-primary'>Add task</button> : <button className='btn-primary' onClick={() => update_todo(index)}>Update</button>}\r\n            {myarr.map((item, index) => {\r\n                return (\r\n                    <ul><li key={index}>{item} <button onClick={() => Del_btn(index)} className='btn-danger'>Delete</button>\r\n                        <button className='btn-danger' onClick={() => edit_btn(item, index)}>Edit</button>\r\n\r\n                    </li></ul>\r\n                )\r\n\r\n            })}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Todo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}