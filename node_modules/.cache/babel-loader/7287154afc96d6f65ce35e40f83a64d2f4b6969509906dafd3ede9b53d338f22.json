{"ast":null,"code":"var _jsxFileName = \"D:\\\\reduxapp\\\\src\\\\Components\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport { Button } from 'bootstrap';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Add_todo, del_todo, update_todo } from '../Container/Services/Reducres/Todoreducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [val, setval] = useState('');\n  const [update, setUpdate] = useState(false);\n  const [index, setIndex] = useState('');\n  const dispatch = useDispatch();\n  const myarr = useSelector(state => state.todo.arry);\n  //   console.log(val,'j');\n\n  const inputval = e => {\n    setval(e.target.value);\n  };\n  const submit_btn = () => {\n    dispatch(Add_todo(val));\n    setval('');\n  };\n  const Del_btn = index => {\n    dispatch(del_todo(index));\n  };\n  const edit_btn = (item, index) => {\n    console.log(item);\n    setval(item);\n    setUpdate(true);\n    setIndex(index);\n  };\n  const update_todo = e => {\n    dispatch(update_todo(index));\n    console.log(index, 'index');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoList \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: inputval,\n      className: \"input\",\n      type: \"text\",\n      value: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), !update ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit_btn,\n      className: \"btn-primary\",\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-primary\",\n      onClick: e => update_todo(),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 97\n    }, this), myarr.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => Del_btn(index),\n            className: \"btn-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-danger\",\n            onClick: () => edit_btn(item, index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Todo, \"ixM2rILPTU6TIPOUf7hu7m1/gmw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Button","React","useState","useDispatch","useSelector","Add_todo","del_todo","update_todo","Todo","val","setval","update","setUpdate","index","setIndex","dispatch","myarr","state","todo","arry","inputval","e","target","value","submit_btn","Del_btn","edit_btn","item","console","log","map"],"sources":["D:/reduxapp/src/Components/Todo.js"],"sourcesContent":["import { Button } from 'bootstrap'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Add_todo, del_todo, update_todo } from '../Container/Services/Reducres/Todoreducer'\r\n\r\nconst Todo = () => {\r\n    const [val, setval] = useState('')\r\n    const [update, setUpdate] = useState(false)\r\n    const [index, setIndex] = useState('')\r\n    const dispatch = useDispatch()\r\n    const myarr = useSelector((state) => state.todo.arry)\r\n    //   console.log(val,'j');\r\n\r\n    const inputval = (e) => {\r\n        setval(e.target.value)\r\n\r\n    }\r\n\r\n\r\n    const submit_btn = () => {\r\n        dispatch(Add_todo(val))\r\n        setval('')\r\n    }\r\n    const Del_btn = (index) => {\r\n\r\n        dispatch(del_todo(index))\r\n    }\r\n    const edit_btn = (item, index) => {\r\n        console.log(item);\r\n        setval(item)\r\n        setUpdate(true)\r\n        setIndex(index)\r\n    }\r\n\r\n    const update_todo = (e) => {\r\n        dispatch(update_todo(index))\r\nconsole.log(index,'index');\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>TodoList </h1>\r\n            <input onChange={inputval} className='input' type=\"text\" value={val} />\r\n            {!update ? <button onClick={submit_btn} className='btn-primary'>Add task</button> : <button className='btn-primary' onClick={(e) => update_todo()}>Update</button>}\r\n            {myarr.map((item, index) => {\r\n                return (\r\n                    <ul><li key={index}>{item} <button onClick={() => Del_btn(index)} className='btn-danger'>Delete</button>\r\n                        <button className='btn-danger' onClick={() => edit_btn(item, index)}>Edit</button>\r\n\r\n                    </li></ul>\r\n                )\r\n\r\n            })}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Todo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}